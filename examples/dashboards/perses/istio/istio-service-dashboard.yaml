kind: Dashboard
metadata:
    name: istio-service-dashboard
    createdAt: 0001-01-01T00:00:00Z
    updatedAt: 0001-01-01T00:00:00Z
    version: 0
    project: perses-dev
spec:
    display:
        name: Istio Service Dashboard
    variables:
        - kind: ListVariable
          spec:
            display:
                name: Service
                hidden: false
            defaultValue: details.bookinfo.svc.cluster.local
            allowAllValue: false
            allowMultiple: false
            plugin:
                kind: PrometheusLabelValuesVariable
                spec:
                    datasource:
                        kind: PrometheusDatasource
                        name: prometheus-datasource
                    labelName: destination_service
                    matchers:
                        - istio_requests_total{}
            name: service
        - kind: ListVariable
          spec:
            display:
                name: Reporter
                hidden: false
            defaultValue: destination
            allowAllValue: false
            allowMultiple: true
            plugin:
                kind: PrometheusLabelValuesVariable
                spec:
                    datasource:
                        kind: PrometheusDatasource
                        name: prometheus-datasource
                    labelName: reporter
                    matchers:
                        - istio_requests_total{}
            name: qrep
        - kind: ListVariable
          spec:
            display:
                name: Client Cluster
                hidden: false
            allowAllValue: true
            allowMultiple: true
            plugin:
                kind: PrometheusLabelValuesVariable
                spec:
                    datasource:
                        kind: PrometheusDatasource
                        name: prometheus-datasource
                    labelName: source_cluster
                    matchers:
                        - istio_requests_total{reporter=~"$qrep", destination_service="$service"}
            name: srccluster
        - kind: ListVariable
          spec:
            display:
                name: Client Workload Namespace
                hidden: false
            allowAllValue: true
            allowMultiple: true
            plugin:
                kind: PrometheusLabelValuesVariable
                spec:
                    datasource:
                        kind: PrometheusDatasource
                        name: prometheus-datasource
                    labelName: source_workload_namespace
                    matchers:
                        - istio_requests_total{reporter=~"$qrep", destination_service="$service"}
            name: srcns
        - kind: ListVariable
          spec:
            display:
                name: Client Workload
                hidden: false
            allowAllValue: true
            allowMultiple: true
            plugin:
                kind: PrometheusLabelValuesVariable
                spec:
                    datasource:
                        kind: PrometheusDatasource
                        name: prometheus-datasource
                    labelName: source_workload
                    matchers:
                        - istio_requests_total{reporter=~"$qrep", destination_service=~"$service", source_workload_namespace=~"$srcns"}
            name: srcwl
        - kind: ListVariable
          spec:
            display:
                name: Service Workload Cluster
                hidden: false
            allowAllValue: true
            allowMultiple: true
            plugin:
                kind: PrometheusLabelValuesVariable
                spec:
                    datasource:
                        kind: PrometheusDatasource
                        name: prometheus-datasource
                    labelName: destination_cluster
                    matchers:
                        - istio_requests_total{reporter="destination", destination_service="$service"}
            name: dstcluster
        - kind: ListVariable
          spec:
            display:
                name: Service Workload Namespace
                hidden: false
            allowAllValue: true
            allowMultiple: true
            plugin:
                kind: PrometheusLabelValuesVariable
                spec:
                    datasource:
                        kind: PrometheusDatasource
                        name: prometheus-datasource
                    labelName: destination_workload_namespace
                    matchers:
                        - istio_requests_total{reporter="destination", destination_service="$service"}
            name: dstns
        - kind: ListVariable
          spec:
            display:
                name: Service Workload
                hidden: false
            allowAllValue: true
            allowMultiple: true
            plugin:
                kind: PrometheusLabelValuesVariable
                spec:
                    datasource:
                        kind: PrometheusDatasource
                        name: prometheus-datasource
                    labelName: destination_workload
                    matchers:
                        - istio_requests_total{reporter="destination", destination_service=~"$service", destination_workload_namespace=~"$dstns"}
            name: dstwl
    panels:
        "0_0":
            kind: Panel
            spec:
                display:
                    name: SERVICE
                plugin:
                    kind: Markdown
                    spec:
                        text: |-
                            <div class="dashboard-header text-center">
                            <span>SERVICE: $service</span>
                            </div>
        "0_1":
            kind: Panel
            spec:
                display:
                    name: Client Request Volume
                plugin:
                    kind: StatChart
                    spec:
                        calculation: last
                        thresholds:
                            mode: absolute
                            defaultColor: green
                            steps:
                                - value: 0
                                  color: green
                                - value: 80
                                  color: red
                        sparkline:
                            width: 1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_requests_total{reporter=~"$qrep",destination_service=~"$service"}[5m])), 0.001)
        "0_2":
            kind: Panel
            spec:
                display:
                    name: Client Success Rate (non-5xx responses)
                plugin:
                    kind: StatChart
                    spec:
                        calculation: last
                        format:
                            unit: percent-decimal
                        thresholds:
                            mode: absolute
                            defaultColor: green
                            steps:
                                - value: 0
                                  color: dark-red
                                - value: 0.95
                                  color: dark-yellow
                                - value: 0.99
                                  color: dark-green
                        sparkline:
                            width: 1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: sum(irate(istio_requests_total{reporter=~"$qrep",destination_service=~"$service",response_code!~"5.*"}[5m])) / (sum(irate(istio_requests_total{reporter=~"$qrep",destination_service=~"$service"}[5m])) or on () vector(1))
        "0_3":
            kind: Panel
            spec:
                display:
                    name: Client Request Duration
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: right
                            mode: list
                        yAxis:
                            format:
                                unit: seconds
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~"$qrep",destination_service=~"$service"}[1m])) by (le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=~"$qrep",destination_service=~"$service"}[1m])) by (le))
                                seriesNameFormat: P50
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~"$qrep",destination_service=~"$service"}[1m])) by (le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=~"$qrep",destination_service=~"$service"}[1m])) by (le))
                                seriesNameFormat: P90
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~"$qrep",destination_service=~"$service"}[1m])) by (le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=~"$qrep",destination_service=~"$service"}[1m])) by (le))
                                seriesNameFormat: P99
        "0_4":
            kind: Panel
            spec:
                display:
                    name: TCP Received Bytes
                plugin:
                    kind: StatChart
                    spec:
                        calculation: mean
                        format:
                            unit: bytes/sec
                        thresholds:
                            mode: absolute
                            defaultColor: green
                            steps:
                                - value: 0
                                  color: green
                                - value: 80
                                  color: red
                        sparkline:
                            width: 1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: sum(irate(istio_tcp_received_bytes_total{reporter=~"$qrep", destination_service=~"$service"}[1m]))
        "0_5":
            kind: Panel
            spec:
                display:
                    name: Server Request Volume
                plugin:
                    kind: StatChart
                    spec:
                        calculation: last
                        thresholds:
                            mode: absolute
                            defaultColor: green
                            steps:
                                - value: 0
                                  color: green
                                - value: 80
                                  color: red
                        sparkline:
                            width: 1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_requests_total{reporter="destination",destination_service=~"$service"}[5m])), 0.001)
        "0_6":
            kind: Panel
            spec:
                display:
                    name: Server Success Rate (non-5xx responses)
                plugin:
                    kind: StatChart
                    spec:
                        calculation: last
                        format:
                            unit: percent-decimal
                        thresholds:
                            mode: absolute
                            defaultColor: green
                            steps:
                                - value: 0
                                  color: rgba(50, 172, 45, 0.97)
                                - value: 95
                                  color: rgba(237, 129, 40, 0.89)
                                - value: 99
                                  color: rgba(245, 54, 54, 0.9)
                        sparkline:
                            width: 1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: sum(irate(istio_requests_total{reporter="destination",destination_service=~"$service",response_code!~"5.*"}[5m])) / (sum(irate(istio_requests_total{reporter="destination",destination_service=~"$service"}[5m])) or on () vector(1))
        "0_7":
            kind: Panel
            spec:
                display:
                    name: Server Request Duration
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: right
                            mode: list
                        yAxis:
                            format:
                                unit: seconds
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter="destination",destination_service=~"$service"}[1m])) by (le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter="destination",destination_service=~"$service"}[1m])) by (le))
                                seriesNameFormat: P50
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter="destination",destination_service=~"$service"}[1m])) by (le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter="destination",destination_service=~"$service"}[1m])) by (le))
                                seriesNameFormat: P90
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter="destination",destination_service=~"$service"}[1m])) by (le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter="destination",destination_service=~"$service"}[1m])) by (le))
                                seriesNameFormat: P99
        "0_8":
            kind: Panel
            spec:
                display:
                    name: TCP Sent Bytes
                plugin:
                    kind: StatChart
                    spec:
                        calculation: mean
                        format:
                            unit: bytes/sec
                        thresholds:
                            mode: absolute
                            defaultColor: green
                            steps:
                                - value: 0
                                  color: green
                                - value: 80
                                  color: red
                        sparkline:
                            width: 1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: sum(irate(istio_tcp_sent_bytes_total{reporter=~"$qrep", destination_service=~"$service"}[1m]))
        "1_0":
            kind: Panel
            spec:
                display:
                    name: CLIENT WORKLOADS
                plugin:
                    kind: Markdown
                    spec:
                        text: |-
                            <div class="dashboard-header text-center">
                            <span>CLIENT WORKLOADS</span>
                            </div>
        "1_1":
            kind: Panel
            spec:
                display:
                    name: Incoming Requests By Source And Response Code
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis: {}
                        visual:
                            display: line
                            lineWidth: 1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_requests_total{connection_security_policy="mutual_tls",destination_service=~"$service",reporter=~"$qrep",source_workload=~"$srcwl",source_workload_namespace=~"$srcns"}[5m])) by (source_workload, source_workload_namespace, response_code), 0.001)
                                seriesNameFormat: "{{ source_workload }}.{{ source_workload_namespace }} : {{ response_code }} (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_requests_total{connection_security_policy!="mutual_tls", destination_service=~"$service", reporter=~"$qrep", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[5m])) by (source_workload, source_workload_namespace, response_code), 0.001)
                                seriesNameFormat: '{{ source_workload }}.{{ source_workload_namespace }} : {{ response_code }}'
        "1_2":
            kind: Panel
            spec:
                display:
                    name: Incoming Success Rate (non-5xx responses) By Source
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: percent-decimal
                            max: 1.01
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: sum(irate(istio_requests_total{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service",response_code!~"5.*", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[5m])) by (source_workload, source_workload_namespace) / sum(irate(istio_requests_total{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[5m])) by (source_workload, source_workload_namespace)
                                seriesNameFormat: "{{ source_workload }}.{{ source_workload_namespace }} (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: sum(irate(istio_requests_total{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service",response_code!~"5.*", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[5m])) by (source_workload, source_workload_namespace) / sum(irate(istio_requests_total{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[5m])) by (source_workload, source_workload_namespace)
                                seriesNameFormat: '{{ source_workload }}.{{ source_workload_namespace }}'
        "2_0":
            kind: Panel
            spec:
                display:
                    name: Incoming Request Duration By Source
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: seconds
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}} P50 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}} P90 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}} P95 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}} P99 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P50'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P90'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P95'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P99'
        "2_1":
            kind: Panel
            spec:
                display:
                    name: Incoming Request Size By Source
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: bytes
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}} P50 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}}  P90 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}} P95 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}}  P99 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P50'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P90'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P95'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P99'
        "2_2":
            kind: Panel
            spec:
                display:
                    name: Response Size By Source
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: bytes
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}} P50 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}}  P90 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}} P95 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: "{{source_workload}}.{{source_workload_namespace}}  P99 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P50'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P90'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P95'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace, le))
                                seriesNameFormat: '{{source_workload}}.{{source_workload_namespace}} P99'
        "3_0":
            kind: Panel
            spec:
                display:
                    name: Bytes Received from Incoming TCP Connection
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: bytes/sec
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_tcp_received_bytes_total{reporter=~"$qrep", connection_security_policy="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace), 0.001)
                                seriesNameFormat: "{{ source_workload }}.{{ source_workload_namespace}} (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_tcp_received_bytes_total{reporter=~"$qrep", connection_security_policy!="mutual_tls", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace), 0.001)
                                seriesNameFormat: '{{ source_workload }}.{{ source_workload_namespace}}'
        "3_1":
            kind: Panel
            spec:
                display:
                    name: Bytes Sent to Incoming TCP Connection
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: bytes/sec
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy="mutual_tls", reporter=~"$qrep", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace), 0.001)
                                seriesNameFormat: "{{ source_workload }}.{{ source_workload_namespace}} (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!="mutual_tls", reporter=~"$qrep", destination_service=~"$service", source_workload=~"$srcwl", source_workload_namespace=~"$srcns"}[1m])) by (source_workload, source_workload_namespace), 0.001)
                                seriesNameFormat: '{{ source_workload }}.{{ source_workload_namespace}}'
        "4_0":
            kind: Panel
            spec:
                display:
                    name: SERVICE WORKLOADS
                plugin:
                    kind: Markdown
                    spec:
                        text: |-
                            <div class="dashboard-header text-center">
                            <span>SERVICE WORKLOADS</span>
                            </div>
        "4_1":
            kind: Panel
            spec:
                display:
                    name: Incoming Requests By Destination Workload And Response Code
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis: {}
                        visual:
                            display: line
                            lineWidth: 1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_requests_total{connection_security_policy="mutual_tls",destination_service=~"$service",reporter="destination",destination_workload=~"$dstwl",destination_workload_namespace=~"$dstns"}[5m])) by (destination_workload, destination_workload_namespace, response_code), 0.001)
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }} : {{ response_code }} (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_requests_total{connection_security_policy!="mutual_tls", destination_service=~"$service", reporter="destination", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[5m])) by (destination_workload, destination_workload_namespace, response_code), 0.001)
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} : {{ response_code }}'
        "4_2":
            kind: Panel
            spec:
                display:
                    name: Incoming Success Rate (non-5xx responses) By Destination Workload
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: percent-decimal
                            max: 1.01
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: sum(irate(istio_requests_total{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service",response_code!~"5.*", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[5m])) by (destination_workload, destination_workload_namespace) / sum(irate(istio_requests_total{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[5m])) by (destination_workload, destination_workload_namespace)
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }} (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: sum(irate(istio_requests_total{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service",response_code!~"5.*", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[5m])) by (destination_workload, destination_workload_namespace) / sum(irate(istio_requests_total{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[5m])) by (destination_workload, destination_workload_namespace)
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }}'
        "5_0":
            kind: Panel
            spec:
                display:
                    name: Incoming Request Duration By Service Workload
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: seconds
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }} P50 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }} P90 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }} P95 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }} P99 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P50'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P90'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P95'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: (histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P99'
        "5_1":
            kind: Panel
            spec:
                display:
                    name: Incoming Request Size By Service Workload
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: bytes
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }} P50 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }}  P90 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }} P95 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }}  P99 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P50'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P90'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P95'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P99'
        "5_2":
            kind: Panel
            spec:
                display:
                    name: Response Size By Service Workload
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: bytes
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }} P50 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }}  P90 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }} P95 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace }}  P99 (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P50'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P90'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P95'
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[1m])) by (destination_workload, destination_workload_namespace, le))
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace }} P99'
        "6_0":
            kind: Panel
            spec:
                display:
                    name: Bytes Received from Incoming TCP Connection
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: bytes/sec
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_tcp_received_bytes_total{reporter="destination", connection_security_policy="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[$__rate_interval])) by (destination_workload, destination_workload_namespace), 0.001)
                                seriesNameFormat: "{{ destination_workload }}.{{ destination_workload_namespace}} (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_tcp_received_bytes_total{reporter="destination", connection_security_policy!="mutual_tls", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[$__rate_interval])) by (destination_workload, destination_workload_namespace), 0.001)
                                seriesNameFormat: '{{ destination_workload }}.{{ destination_workload_namespace}}'
        "6_1":
            kind: Panel
            spec:
                display:
                    name: Bytes Sent to Incoming TCP Connection
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                            mode: list
                        yAxis:
                            format:
                                unit: bytes/sec
                        visual:
                            display: line
                            lineWidth: 1
                            areaOpacity: 0.1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy="mutual_tls", reporter="destination", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[$__rate_interval])) by (destination_workload, destination_workload_namespace), 0.001)
                                seriesNameFormat: "{{ destination_workload }}.{{destination_workload_namespace }} (\U0001F510mTLS)"
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                datasource:
                                    kind: PrometheusDatasource
                                    name: prometheus-datasource
                                query: round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!="mutual_tls", reporter="destination", destination_service=~"$service", destination_workload=~"$dstwl", destination_workload_namespace=~"$dstns"}[$__rate_interval])) by (destination_workload, destination_workload_namespace), 0.001)
                                seriesNameFormat: '{{ destination_workload }}.{{destination_workload_namespace }}'
    layouts:
        - kind: Grid
          spec:
            display:
                title: General
            items:
                - x: 0
                  "y": 0
                  width: 6
                  height: 4
                  content:
                    $ref: '#/spec/panels/0_0'
                - x: 6
                  "y": 0
                  width: 6
                  height: 4
                  content:
                    $ref: '#/spec/panels/0_1'
                - x: 12
                  "y": 0
                  width: 6
                  height: 4
                  content:
                    $ref: '#/spec/panels/0_2'
                - x: 18
                  "y": 0
                  width: 6
                  height: 4
                  content:
                    $ref: '#/spec/panels/0_3'
                - x: 0
                  "y": 4
                  width: 6
                  height: 4
                  content:
                    $ref: '#/spec/panels/0_4'
                - x: 6
                  "y": 4
                  width: 6
                  height: 4
                  content:
                    $ref: '#/spec/panels/0_5'
                - x: 12
                  "y": 4
                  width: 6
                  height: 4
                  content:
                    $ref: '#/spec/panels/0_6'
                - x: 18
                  "y": 4
                  width: 6
                  height: 4
                  content:
                    $ref: '#/spec/panels/0_7'
                - x: 0
                  "y": 8
                  width: 6
                  height: 4
                  content:
                    $ref: '#/spec/panels/0_8'
        - kind: Grid
          spec:
            display:
                title: Client Workloads
            items:
                - x: 0
                  "y": 0
                  width: 12
                  height: 6
                  content:
                    $ref: '#/spec/panels/1_0'
                - x: 12
                  "y": 0
                  width: 12
                  height: 6
                  content:
                    $ref: '#/spec/panels/1_1'
                - x: 0
                  "y": 6
                  width: 12
                  height: 6
                  content:
                    $ref: '#/spec/panels/1_2'
        - kind: Grid
          spec:
            display:
                title: Client Workloads (II)
            items:
                - x: 0
                  "y": 0
                  width: 8
                  height: 6
                  content:
                    $ref: '#/spec/panels/2_0'
                - x: 8
                  "y": 0
                  width: 8
                  height: 6
                  content:
                    $ref: '#/spec/panels/2_1'
                - x: 16
                  "y": 0
                  width: 8
                  height: 6
                  content:
                    $ref: '#/spec/panels/2_2'
        - kind: Grid
          spec:
            display:
                title: Client Workloads (III)
            items:
                - x: 0
                  "y": 0
                  width: 12
                  height: 6
                  content:
                    $ref: '#/spec/panels/3_0'
                - x: 12
                  "y": 0
                  width: 12
                  height: 6
                  content:
                    $ref: '#/spec/panels/3_1'
        - kind: Grid
          spec:
            display:
                title: Service Workloads
            items:
                - x: 0
                  "y": 0
                  width: 12
                  height: 6
                  content:
                    $ref: '#/spec/panels/4_0'
                - x: 12
                  "y": 0
                  width: 12
                  height: 6
                  content:
                    $ref: '#/spec/panels/4_1'
                - x: 0
                  "y": 6
                  width: 12
                  height: 6
                  content:
                    $ref: '#/spec/panels/4_2'
        - kind: Grid
          spec:
            display:
                title: Service Workloads (II)
            items:
                - x: 0
                  "y": 0
                  width: 8
                  height: 6
                  content:
                    $ref: '#/spec/panels/5_0'
                - x: 8
                  "y": 0
                  width: 8
                  height: 6
                  content:
                    $ref: '#/spec/panels/5_1'
                - x: 16
                  "y": 0
                  width: 8
                  height: 6
                  content:
                    $ref: '#/spec/panels/5_2'
        - kind: Grid
          spec:
            display:
                title: Service Workloads (III)
            items:
                - x: 0
                  "y": 0
                  width: 12
                  height: 6
                  content:
                    $ref: '#/spec/panels/6_0'
                - x: 12
                  "y": 0
                  width: 12
                  height: 6
                  content:
                    $ref: '#/spec/panels/6_1'
    duration: 1h
